import { jsx } from "react/jsx-runtime";
import ReactDOMServer from "react-dom/server";
import { StartServer } from "./StartServer.js";
const defaultRenderHandler = async ({
  router,
  responseHeaders
}) => {
  try {
    let html = ReactDOMServer.renderToString(/* @__PURE__ */ jsx(StartServer, { router }));
    const injectedHtml = await Promise.all(router.serverSsr.injectedHtml).then(
      (htmls) => htmls.join("")
    );
    html = html.replace(`</body>`, `${injectedHtml}</body>`);
    return new Response(`<!DOCTYPE html>${html}`, {
      status: router.state.statusCode,
      headers: responseHeaders
    });
  } catch (error) {
    console.error("Render to string error:", error);
    return new Response("Internal Server Error", {
      status: 500,
      headers: responseHeaders
    });
  }
};
export {
  defaultRenderHandler
};
//# sourceMappingURL=defaultRenderHandler.js.map
