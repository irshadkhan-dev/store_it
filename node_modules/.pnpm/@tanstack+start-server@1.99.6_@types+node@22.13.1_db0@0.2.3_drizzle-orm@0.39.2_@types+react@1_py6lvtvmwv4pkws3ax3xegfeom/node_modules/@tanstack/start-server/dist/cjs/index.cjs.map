{"version":3,"file":"index.cjs","sources":["../../src/index.tsx"],"sourcesContent":["import { AsyncLocalStorage } from 'node:async_hooks'\nimport {\n  H3Event,\n  appendCorsHeaders as _appendCorsHeaders,\n  appendCorsPreflightHeaders as _appendCorsPreflightHeaders,\n  appendHeader as _appendHeader,\n  appendHeaders as _appendHeaders,\n  appendResponseHeader as _appendResponseHeader,\n  appendResponseHeaders as _appendResponseHeaders,\n  assertMethod as _assertMethod,\n  clearResponseHeaders as _clearResponseHeaders,\n  clearSession as _clearSession,\n  defaultContentType as _defaultContentType,\n  deleteCookie as _deleteCookie,\n  fetchWithEvent as _fetchWithEvent,\n  getCookie as _getCookie,\n  getHeader as _getHeader,\n  getHeaders as _getHeaders,\n  getProxyRequestHeaders as _getProxyRequestHeaders,\n  getQuery as _getQuery,\n  getRequestFingerprint as _getRequestFingerprint,\n  getRequestHeader as _getRequestHeader,\n  getRequestHeaders as _getRequestHeaders,\n  getRequestHost as _getRequestHost,\n  getRequestIP as _getRequestIP,\n  getRequestProtocol as _getRequestProtocol,\n  getRequestURL as _getRequestURL,\n  getRequestWebStream as _getRequestWebStream,\n  getResponseHeader as _getResponseHeader,\n  getResponseHeaders as _getResponseHeaders,\n  getResponseStatus as _getResponseStatus,\n  getResponseStatusText as _getResponseStatusText,\n  getRouterParam as _getRouterParam,\n  getRouterParams as _getRouterParams,\n  getSession as _getSession,\n  getValidatedQuery as _getValidatedQuery,\n  getValidatedRouterParams as _getValidatedRouterParams,\n  handleCacheHeaders as _handleCacheHeaders,\n  handleCors as _handleCors,\n  isMethod as _isMethod,\n  isPreflightRequest as _isPreflightRequest,\n  parseCookies as _parseCookies,\n  proxyRequest as _proxyRequest,\n  readBody as _readBody,\n  readFormData as _readFormData,\n  readMultipartFormData as _readMultipartFormData,\n  readRawBody as _readRawBody,\n  readValidatedBody as _readValidatedBody,\n  removeResponseHeader as _removeResponseHeader,\n  sealSession as _sealSession,\n  send as _send,\n  sendError as _sendError,\n  sendNoContent as _sendNoContent,\n  sendProxy as _sendProxy,\n  sendRedirect as _sendRedirect,\n  sendStream as _sendStream,\n  sendWebResponse as _sendWebResponse,\n  setCookie as _setCookie,\n  setHeader as _setHeader,\n  setHeaders as _setHeaders,\n  setResponseHeader as _setResponseHeader,\n  setResponseHeaders as _setResponseHeaders,\n  setResponseStatus as _setResponseStatus,\n  unsealSession as _unsealSession,\n  updateSession as _updateSession,\n  useBase as _useBase,\n  useSession as _useSession,\n  writeEarlyHints as _writeEarlyHints,\n} from 'h3'\nimport { getContext as getUnctxContext } from 'unctx'\nimport type { _RequestMiddleware, _ResponseMiddleware } from 'h3'\n\nexport { StartServer } from './StartServer'\nexport { createStartHandler } from './createStartHandler'\nexport { createRequestHandler } from './createRequestHandler'\nexport { defaultStreamHandler } from './defaultStreamHandler'\nexport { defaultRenderHandler } from './defaultRenderHandler'\n\nfunction _setContext(event: H3Event, key: string, value: any) {\n  event.context[key] = value\n}\n\nfunction _getContext(event: H3Event, key: string) {\n  return event.context[key]\n}\n\nexport function defineMiddleware(options: {\n  onRequest?: _RequestMiddleware | Array<_RequestMiddleware>\n  onBeforeResponse?: _ResponseMiddleware | Array<_ResponseMiddleware>\n}) {\n  return options\n}\n\nfunction toWebRequestH3(event: H3Event) {\n  /**\n   * @type {ReadableStream | undefined}\n   */\n  let readableStream: ReadableStream | undefined\n\n  const url = getRequestURL(event)\n  const base = {\n    // @ts-ignore Undici option\n    duplex: 'half',\n    method: event.method,\n    headers: event.headers,\n  }\n\n  if ((event.node.req as any).body instanceof ArrayBuffer) {\n    return new Request(url, {\n      ...base,\n      body: (event.node.req as any).body,\n    })\n  }\n\n  return new Request(url, {\n    ...base,\n    get body() {\n      if (readableStream) {\n        return readableStream\n      }\n      readableStream = getRequestWebStream(event)\n      return readableStream\n    },\n  })\n}\n\nexport function toWebRequest(event: H3Event) {\n  event.web ??= {\n    request: toWebRequestH3(event),\n    url: getRequestURL(event),\n  }\n  return event.web.request\n}\n\nexport {\n  H3Error,\n  H3Event,\n  MIMES,\n  callNodeListener,\n  createApp,\n  createAppEventHandler,\n  createEvent,\n  createRouter,\n  defineEventHandler,\n  defineLazyEventHandler,\n  defineNodeListener,\n  defineNodeMiddleware,\n  defineRequestMiddleware,\n  defineResponseMiddleware,\n  dynamicEventHandler,\n  defineWebSocket,\n  eventHandler,\n  splitCookiesString,\n  fromNodeMiddleware,\n  fromPlainHandler,\n  fromWebHandler,\n  isError,\n  isEventHandler,\n  isWebResponse,\n  lazyEventHandler,\n  promisifyNodeListener,\n  serveStatic,\n  toEventHandler,\n  toNodeListener,\n  toPlainHandler,\n  toWebHandler,\n  isCorsOriginAllowed,\n  isStream,\n  createError,\n  sanitizeStatusCode,\n  sanitizeStatusMessage,\n  type AddRouteShortcuts,\n  type App,\n  type AppOptions,\n  type AppUse,\n  type CacheConditions,\n  type CreateRouterOptions,\n  type Duplex,\n  type DynamicEventHandler,\n  type Encoding,\n  type EventHandler,\n  type EventHandlerObject,\n  type EventHandlerRequest,\n  type EventHandlerResponse,\n  type H3CorsOptions,\n  type H3EventContext,\n  type HTTPHeaderName,\n  type HTTPMethod,\n  type InferEventInput,\n  type InputLayer,\n  type InputStack,\n  type Layer,\n  type LazyEventHandler,\n  type Matcher,\n  type MultiPartData,\n  type NodeEventContext,\n  type NodeListener,\n  type NodeMiddleware,\n  type NodePromisifiedHandler,\n  type PlainHandler,\n  type PlainRequest,\n  type PlainResponse,\n  type ProxyOptions,\n  type RequestFingerprintOptions,\n  type RequestHeaders,\n  type RouteNode,\n  type Router,\n  type RouterMethod,\n  type RouterUse,\n  type ServeStaticOptions,\n  type Session,\n  type SessionConfig,\n  type SessionData,\n  type Stack,\n  type StaticAssetMeta,\n  type ValidateFunction,\n  type ValidateResult,\n  type WebEventContext,\n  type WebHandler,\n  type _RequestMiddleware,\n  type _ResponseMiddleware,\n} from 'h3'\n\nfunction getHTTPEvent() {\n  return getEvent()\n}\n\nexport const HTTPEventSymbol = Symbol('$HTTPEvent')\n\nexport function isEvent(obj: any) {\n  return (\n    typeof obj === 'object' &&\n    (obj instanceof H3Event ||\n      obj?.[HTTPEventSymbol] instanceof H3Event ||\n      obj?.__is_event__ === true)\n  )\n  // Implement logic to check if obj is an H3Event\n}\n\ntype WrapFunction<TFn extends (...args: Array<any>) => any> = (\n  ...args: Parameters<TFn> extends [H3Event, ...infer TArgs]\n    ? TArgs | Parameters<TFn>\n    : Parameters<TFn>\n) => ReturnType<TFn>\n\nfunction createWrapperFunction<TFn extends (...args: Array<any>) => any>(\n  h3Function: TFn,\n): WrapFunction<TFn> {\n  return function (...args: Array<any>) {\n    let event = args[0]\n    if (!isEvent(event)) {\n      if (!(globalThis as any).app.config.server.experimental?.asyncContext) {\n        throw new Error(\n          'AsyncLocalStorage was not enabled. Use the `server.experimental.asyncContext: true` option in your app configuration to enable it. Or, pass the instance of HTTPEvent that you have as the first argument to the function.',\n        )\n      }\n      event = getHTTPEvent()\n      if (!event) {\n        throw new Error(\n          `No HTTPEvent found in AsyncLocalStorage. Make sure you are using the function within the server runtime.`,\n        )\n      }\n      args.unshift(event)\n    } else {\n      args[0] =\n        event instanceof H3Event || event.__is_event__\n          ? event\n          : event[HTTPEventSymbol]\n    }\n\n    return (h3Function as any)(...args)\n  }\n}\n\n// Creating wrappers for each utility and exporting them with their original names\nexport const readRawBody = createWrapperFunction(_readRawBody)\nexport const readBody = createWrapperFunction(_readBody)\nexport const getQuery = createWrapperFunction(_getQuery)\nexport const isMethod = createWrapperFunction(_isMethod)\nexport const isPreflightRequest = createWrapperFunction(_isPreflightRequest)\nexport const getValidatedQuery = createWrapperFunction(_getValidatedQuery)\nexport const getRouterParams = createWrapperFunction(_getRouterParams)\nexport const getRouterParam = createWrapperFunction(_getRouterParam)\nexport const getValidatedRouterParams = createWrapperFunction(\n  _getValidatedRouterParams,\n)\nexport const assertMethod = createWrapperFunction(_assertMethod)\nexport const getRequestHeaders = createWrapperFunction(_getRequestHeaders)\nexport const getRequestHeader = createWrapperFunction(_getRequestHeader)\nexport const getRequestURL = createWrapperFunction(_getRequestURL)\nexport const getRequestHost = createWrapperFunction(_getRequestHost)\nexport const getRequestProtocol = createWrapperFunction(_getRequestProtocol)\nexport const getRequestIP = createWrapperFunction(_getRequestIP)\nexport const send = createWrapperFunction(_send)\nexport const sendNoContent = createWrapperFunction(_sendNoContent)\nexport const setResponseStatus = createWrapperFunction(_setResponseStatus)\nexport const getResponseStatus = createWrapperFunction(_getResponseStatus)\nexport const getResponseStatusText = createWrapperFunction(\n  _getResponseStatusText,\n)\nexport const getResponseHeaders = createWrapperFunction(_getResponseHeaders)\nexport const getResponseHeader = createWrapperFunction(_getResponseHeader)\nexport const setResponseHeaders = createWrapperFunction(_setResponseHeaders)\nexport const setResponseHeader = createWrapperFunction(_setResponseHeader)\nexport const appendResponseHeaders = createWrapperFunction(\n  _appendResponseHeaders,\n)\nexport const appendResponseHeader = createWrapperFunction(_appendResponseHeader)\nexport const defaultContentType = createWrapperFunction(_defaultContentType)\nexport const sendRedirect = createWrapperFunction(_sendRedirect)\nexport const sendStream = createWrapperFunction(_sendStream)\nexport const writeEarlyHints = createWrapperFunction(_writeEarlyHints)\nexport const sendError = createWrapperFunction(_sendError)\nexport const sendProxy = createWrapperFunction(_sendProxy)\nexport const proxyRequest = createWrapperFunction(_proxyRequest)\nexport const fetchWithEvent = createWrapperFunction(_fetchWithEvent)\nexport const getProxyRequestHeaders = createWrapperFunction(\n  _getProxyRequestHeaders,\n)\n\nexport const parseCookies = createWrapperFunction(_parseCookies)\nexport const getCookie = createWrapperFunction(_getCookie)\nexport const setCookie = createWrapperFunction(_setCookie)\nexport const deleteCookie = createWrapperFunction(_deleteCookie)\nexport const useBase = createWrapperFunction(_useBase)\nexport const useSession = createWrapperFunction(_useSession)\nexport const getSession = createWrapperFunction(_getSession)\nexport const updateSession = createWrapperFunction(_updateSession)\nexport const sealSession = createWrapperFunction(_sealSession)\nexport const unsealSession = createWrapperFunction(_unsealSession)\nexport const clearSession = createWrapperFunction(_clearSession)\nexport const handleCacheHeaders = createWrapperFunction(_handleCacheHeaders)\nexport const handleCors = createWrapperFunction(_handleCors)\nexport const appendCorsHeaders = createWrapperFunction(_appendCorsHeaders)\nexport const appendCorsPreflightHeaders = createWrapperFunction(\n  _appendCorsPreflightHeaders,\n)\nexport const sendWebResponse = createWrapperFunction(_sendWebResponse)\nexport const appendHeader = createWrapperFunction(_appendHeader)\nexport const appendHeaders = createWrapperFunction(_appendHeaders)\nexport const setHeader = createWrapperFunction(_setHeader)\nexport const setHeaders = createWrapperFunction(_setHeaders)\nexport const getHeader = createWrapperFunction(_getHeader)\nexport const getHeaders = createWrapperFunction(_getHeaders)\nexport const getRequestFingerprint = createWrapperFunction(\n  _getRequestFingerprint,\n)\nexport const getRequestWebStream = createWrapperFunction(_getRequestWebStream)\nexport const readFormData = createWrapperFunction(_readFormData)\nexport const readMultipartFormData = createWrapperFunction(\n  _readMultipartFormData,\n)\nexport const readValidatedBody = createWrapperFunction(_readValidatedBody)\nexport const removeResponseHeader = createWrapperFunction(_removeResponseHeader)\nexport const getContext = createWrapperFunction(_getContext)\nexport const setContext = createWrapperFunction(_setContext)\n\nexport const clearResponseHeaders = createWrapperFunction(_clearResponseHeaders)\n\nexport const getWebRequest = createWrapperFunction(toWebRequest)\n\nexport { createApp as createServer } from 'h3'\n\nfunction getNitroAsyncContext() {\n  const nitroAsyncContext = getUnctxContext('nitro-app', {\n    asyncContext: (globalThis as any).app.config.server.experimental\n      ?.asyncContext\n      ? true\n      : false,\n    AsyncLocalStorage,\n  })\n\n  return nitroAsyncContext\n}\n\nexport function getEvent() {\n  return (getNitroAsyncContext().use() as any).event\n}\n\nexport async function handleHTTPEvent(event: H3Event) {\n  return await (globalThis as any).$handle(event)\n}\n"],"names":["H3Event","_readRawBody","_readBody","_getQuery","_isMethod","_isPreflightRequest","_getValidatedQuery","_getRouterParams","_getRouterParam","_getValidatedRouterParams","_assertMethod","_getRequestHeaders","_getRequestHeader","_getRequestURL","_getRequestHost","_getRequestProtocol","_getRequestIP","_send","_sendNoContent","_setResponseStatus","_getResponseStatus","_getResponseStatusText","_getResponseHeaders","_getResponseHeader","_setResponseHeaders","_setResponseHeader","_appendResponseHeaders","_appendResponseHeader","_defaultContentType","_sendRedirect","_sendStream","_writeEarlyHints","_sendError","_sendProxy","_proxyRequest","_fetchWithEvent","_getProxyRequestHeaders","_parseCookies","_getCookie","_setCookie","_deleteCookie","_useBase","_useSession","_getSession","_updateSession","_sealSession","_unsealSession","_clearSession","_handleCacheHeaders","_handleCors","_appendCorsHeaders","_appendCorsPreflightHeaders","_sendWebResponse","_appendHeader","_appendHeaders","_setHeader","_setHeaders","_getHeader","_getHeaders","_getRequestFingerprint","_getRequestWebStream","_readFormData","_readMultipartFormData","_readValidatedBody","_removeResponseHeader","_clearResponseHeaders","getUnctxContext","AsyncLocalStorage"],"mappings":"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"}