{"version":3,"file":"index.js","sources":["../../src/index.ts"],"sourcesContent":["import { fileURLToPath, pathToFileURL } from 'node:url'\n\nimport { logDiff } from '@tanstack/router-utils'\nimport { compileStartOutput } from './compilers'\n\nimport type { Plugin } from 'vite'\n\nconst debug =\n  process.env.TSR_VITE_DEBUG &&\n  ['true', 'start-plugin'].includes(process.env.TSR_VITE_DEBUG)\n\nexport type TanStackStartViteOptions = {\n  env: 'server' | 'ssr' | 'client'\n}\n\nconst transformFuncs = [\n  'createServerFn',\n  'createMiddleware',\n  'serverOnly',\n  'clientOnly',\n  'createIsomorphicFn',\n]\nconst tokenRegex = new RegExp(transformFuncs.join('|'))\n// const eitherFuncRegex = new RegExp(\n//   `(function ${transformFuncs.join('|function ')})`,\n// )\n\nexport function TanStackStartVitePlugin(\n  opts: TanStackStartViteOptions,\n): Plugin {\n  let ROOT: string = process.cwd()\n\n  return {\n    name: 'vite-plugin-tanstack-start-create-server-fn',\n    enforce: 'pre',\n    configResolved: (config) => {\n      ROOT = config.root\n    },\n    transform(code, id) {\n      const url = pathToFileURL(id)\n      url.searchParams.delete('v')\n      id = fileURLToPath(url).replace(/\\\\/g, '/')\n\n      const includesToken = tokenRegex.test(code)\n      // const includesEitherFunc = eitherFuncRegex.test(code)\n\n      if (\n        !includesToken\n        // includesEitherFunc\n        // /node_modules/.test(id)\n      ) {\n        return null\n      }\n\n      if (code.includes('@react-refresh')) {\n        throw new Error(\n          `We detected that the '@vitejs/plugin-react' was passed before '@tanstack/start-plugin'. Please make sure that '@tanstack/router-vite-plugin' is passed before '@vitejs/plugin-react' and try again: \ne.g.\n\nplugins: [\n  TanStackStartVite(), // Place this before viteReact()\n  viteReact(),\n]\n`,\n        )\n      }\n\n      if (debug) console.info(`${opts.env} Compiling Start: `, id)\n\n      const compiled = compileStartOutput({\n        code,\n        root: ROOT,\n        filename: id,\n        env: opts.env,\n      })\n\n      if (debug) {\n        logDiff(code, compiled.code)\n        console.log('Output:\\n', compiled.code + '\\n\\n')\n      }\n\n      return compiled\n    },\n  }\n}\n"],"names":[],"mappings":";;;AAOA,MAAM,QACJ,QAAQ,IAAI,kBACZ,CAAC,QAAQ,cAAc,EAAE,SAAS,QAAQ,IAAI,cAAc;AAM9D,MAAM,iBAAiB;AAAA,EACrB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AACA,MAAM,aAAa,IAAI,OAAO,eAAe,KAAK,GAAG,CAAC;AAK/C,SAAS,wBACd,MACQ;AACJ,MAAA,OAAe,QAAQ,IAAI;AAExB,SAAA;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,IACT,gBAAgB,CAAC,WAAW;AAC1B,aAAO,OAAO;AAAA,IAChB;AAAA,IACA,UAAU,MAAM,IAAI;AACZ,YAAA,MAAM,cAAc,EAAE;AACxB,UAAA,aAAa,OAAO,GAAG;AAC3B,WAAK,cAAc,GAAG,EAAE,QAAQ,OAAO,GAAG;AAEpC,YAAA,gBAAgB,WAAW,KAAK,IAAI;AAG1C,UACE,CAAC,eAGD;AACO,eAAA;AAAA,MAAA;AAGL,UAAA,KAAK,SAAS,gBAAgB,GAAG;AACnC,cAAM,IAAI;AAAA,UACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQF;AAAA,MAAA;AAGF,UAAI,MAAe,SAAA,KAAK,GAAG,KAAK,GAAG,sBAAsB,EAAE;AAE3D,YAAM,WAAW,mBAAmB;AAAA,QAClC;AAAA,QACA,MAAM;AAAA,QACN,UAAU;AAAA,QACV,KAAK,KAAK;AAAA,MAAA,CACX;AAED,UAAI,OAAO;AACD,gBAAA,MAAM,SAAS,IAAI;AAC3B,gBAAQ,IAAI,aAAa,SAAS,OAAO,MAAM;AAAA,MAAA;AAG1C,aAAA;AAAA,IAAA;AAAA,EAEX;AACF;"}