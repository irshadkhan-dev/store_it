import { pathToFileURL, fileURLToPath } from "node:url";
import { logDiff } from "@tanstack/router-utils";
import { compileStartOutput } from "./compilers.js";
const debug = process.env.TSR_VITE_DEBUG && ["true", "start-plugin"].includes(process.env.TSR_VITE_DEBUG);
const transformFuncs = [
  "createServerFn",
  "createMiddleware",
  "serverOnly",
  "clientOnly",
  "createIsomorphicFn"
];
const tokenRegex = new RegExp(transformFuncs.join("|"));
function TanStackStartVitePlugin(opts) {
  let ROOT = process.cwd();
  return {
    name: "vite-plugin-tanstack-start-create-server-fn",
    enforce: "pre",
    configResolved: (config) => {
      ROOT = config.root;
    },
    transform(code, id) {
      const url = pathToFileURL(id);
      url.searchParams.delete("v");
      id = fileURLToPath(url).replace(/\\/g, "/");
      const includesToken = tokenRegex.test(code);
      if (!includesToken) {
        return null;
      }
      if (code.includes("@react-refresh")) {
        throw new Error(
          `We detected that the '@vitejs/plugin-react' was passed before '@tanstack/start-plugin'. Please make sure that '@tanstack/router-vite-plugin' is passed before '@vitejs/plugin-react' and try again: 
e.g.

plugins: [
  TanStackStartVite(), // Place this before viteReact()
  viteReact(),
]
`
        );
      }
      if (debug) console.info(`${opts.env} Compiling Start: `, id);
      const compiled = compileStartOutput({
        code,
        root: ROOT,
        filename: id,
        env: opts.env
      });
      if (debug) {
        logDiff(code, compiled.code);
        console.log("Output:\n", compiled.code + "\n\n");
      }
      return compiled;
    }
  };
}
export {
  TanStackStartVitePlugin
};
//# sourceMappingURL=index.js.map
