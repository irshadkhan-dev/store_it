/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as IndexImport } from './routes/index'
import { Route as AuthSsoCallbackIndexImport } from './routes/auth/sso-callback/index'
import { Route as LayoutImagesIndexImport } from './routes/_layout/images/index'
import { Route as LayoutDashboardIndexImport } from './routes/_layout/dashboard/index'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthSsoCallbackIndexRoute = AuthSsoCallbackIndexImport.update({
  id: '/auth/sso-callback/',
  path: '/auth/sso-callback/',
  getParentRoute: () => rootRoute,
} as any)

const LayoutImagesIndexRoute = LayoutImagesIndexImport.update({
  id: '/images/',
  path: '/images/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDashboardIndexRoute = LayoutDashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/dashboard/': {
      id: '/_layout/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof LayoutDashboardIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/images/': {
      id: '/_layout/images/'
      path: '/images'
      fullPath: '/images'
      preLoaderRoute: typeof LayoutImagesIndexImport
      parentRoute: typeof LayoutImport
    }
    '/auth/sso-callback/': {
      id: '/auth/sso-callback/'
      path: '/auth/sso-callback'
      fullPath: '/auth/sso-callback'
      preLoaderRoute: typeof AuthSsoCallbackIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutDashboardIndexRoute: typeof LayoutDashboardIndexRoute
  LayoutImagesIndexRoute: typeof LayoutImagesIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutDashboardIndexRoute: LayoutDashboardIndexRoute,
  LayoutImagesIndexRoute: LayoutImagesIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof LayoutRouteWithChildren
  '/dashboard': typeof LayoutDashboardIndexRoute
  '/images': typeof LayoutImagesIndexRoute
  '/auth/sso-callback': typeof AuthSsoCallbackIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof LayoutRouteWithChildren
  '/dashboard': typeof LayoutDashboardIndexRoute
  '/images': typeof LayoutImagesIndexRoute
  '/auth/sso-callback': typeof AuthSsoCallbackIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/dashboard/': typeof LayoutDashboardIndexRoute
  '/_layout/images/': typeof LayoutImagesIndexRoute
  '/auth/sso-callback/': typeof AuthSsoCallbackIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/dashboard' | '/images' | '/auth/sso-callback'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/dashboard' | '/images' | '/auth/sso-callback'
  id:
    | '__root__'
    | '/'
    | '/_layout'
    | '/_layout/dashboard/'
    | '/_layout/images/'
    | '/auth/sso-callback/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LayoutRoute: typeof LayoutRouteWithChildren
  AuthSsoCallbackIndexRoute: typeof AuthSsoCallbackIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LayoutRoute: LayoutRouteWithChildren,
  AuthSsoCallbackIndexRoute: AuthSsoCallbackIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_layout",
        "/auth/sso-callback/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/dashboard/",
        "/_layout/images/"
      ]
    },
    "/_layout/dashboard/": {
      "filePath": "_layout/dashboard/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/images/": {
      "filePath": "_layout/images/index.tsx",
      "parent": "/_layout"
    },
    "/auth/sso-callback/": {
      "filePath": "auth/sso-callback/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
